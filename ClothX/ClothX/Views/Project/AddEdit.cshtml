@model ClothX.ViewModels.TailorProjectViewModel
@using ClothX.Utility;
@{
    Layout = UserUtility.Instance.GetLayout(User);
    ViewData["Title"] = "AddEdit";
    if (ViewBag.ProjectId == 0)
    {
        ViewData["Title"] = "Add Project";
    }
    else
    {
        ViewData["Title"] = "Edit Project";
    }
}

<!-- TinyMCE -->
<script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    window.onerror = null;
    tinymce.init({
        selector: '#tiny',
        plugins: 'anchor autolink charmap codesample emoticons imagetools image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss',
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        image_title: true,
        automatic_uploads: true,
        file_picker_ypes: 'image',
        file_picker_callback: function (cb, value, meta) {
            var input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');
            input.onchange = function () {
                var file = this.files[0];
                var reader = new FileReader();
                reader.onload = function () {
                    var id = 'blobid' + (new Date()).getTime();
                    var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                    var base64 = reader.result.split(',')[1];
                    var blobInfo = blobCache.create(id, file, base64);
                    blobCache.add(blobInfo);

                    cb(blobInfo.blobUri(), { title: file.name });
                };
                reader.readAsDataURL(file);
            };
            input.click();
        },
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
        mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
        ]
    });
</script>
<style>
    .tox-notifications-container {
        display: none;
    }

</style>
<!-- TinyMCE -->
<!--Style Start for Input File-->
<style>
    input[type="file"] {
        position: absolute;
        z-index: -1;
        top: 10px;
        left: 8px;
        font-size: 17px;
        color: #b8b8b8;
    }

    .button-wrap {
        position: relative;
    }

    .button {
        display: inline-block;
        padding: 12px 18px;
        cursor: pointer;
        border-radius: 5px;
        background-color: #8ebf42;
        font-size: 16px;
        font-weight: bold;
        color: #fff;
    }
</style>
<!--Style End for Input File-->

<div class="card">
    <div class="card-body">
        <h1 class="card-title p-3">@ViewData["Title"] </h1>
        <form asp-action="AddEdit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-md-12 p-3">
                <div class="form-floating">
                    <input asp-for="Id" value="@ViewBag.ProjectId" hidden />
                    <input asp-for="Title" class="form-control" />
                    <label asp-for="Title" class="control-label"></label>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>
            <div class="row p-3">
                <div class="col-md-6 p-3">
                    <div class="form-floating">
                        <select asp-for="ProductCategoryId" class="form-select" asp-items="ViewBag.ProjectCategory">
                        </select>
                        <label asp-for="ProductCategoryId" class="control-label"></label>
                        <span asp-validation-for="ProductCategoryId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6 p-3">
                    <div class="button-wrap">
                        <label class="button" for="upload">Upload File</label>
                        
                        @if(ViewBag.ProjectId==0)
                        {
                            <input id="upload" required accept="image/*" asp-for="image" name="image" type="file">
                            <span id="selectedFile">No File Selected</span>
                        }
                        else
                        {
                            <input id="upload" accept="image/*" asp-for="image" name="image" type="file">
                            <span id="selectedFile"></span>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="button-wrap">
                    <label class="button" for="images">Upload Images</label>
                    <input id="images" accept="image/*" asp-for="projectImages" multiple name="projectImages" type="file">
                    @if (ViewBag.ProjectId == 0)
                    {
                        <span id="selectedFiles">No File Selected</span>
                    }
                    else
                    {
                        <span id="selectedFiles"></span>
                    }
                </div>
            </div>
            <div class="col-md-12 p-3">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" id="tiny"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group p-3 d-flex justify-content-end">
                <a class="btn btn-secondary m-1" asp-action="Index">Cancel</a> 
                <input type="submit" value="Save" class="btn btn-success m-1" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        const fileInput = document.getElementById('upload');
        const selectedFile = document.getElementById('selectedFile');

        const fileInput2 = document.getElementById('images');
        const selectedFile2 = document.getElementById('selectedFiles');

        fileInput.addEventListener('change', function (event) {
            const selectedFileName = event.target.files[0].name;
            selectedFile.textContent = `Selected File: ${selectedFileName}`;
        });
        
        fileInput2.addEventListener('change', function (event) {
            const files = event.target.files;
            selectedFile2.textContent = `Number of selected files: ${files.length}`;
            //selectedFile2.innerHTML = ''; // Clear the list of selected files.

            //for (let i = 0; i < files.length; i++) {
            //    const listItem = document.createElement('li');
            //    listItem.textContent = files[i].name;
            //    selectedFile2.appendChild(listItem);
            //}
        });
    </script>
}
